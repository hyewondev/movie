{"version":3,"sources":["client/index.js","components/search/Search.js","components/rating/Rating.js","components/poster/Poster.js","components/movie/Movie.js","components/loader/Loader.js","components/message/Message.js","graphql/movies.query.js","components/keyword/Keyword.js","components/info/Info.js","graphql/movie.query.js","components/movie/Detail.js","components/movie/List.js","App.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","Search","props","useState","term","setTerm","sendTerm","event","preventDefault","className","href","type","id","name","onChange","target","value","onKeyPress","key","maxLength","required","aria-required","autoComplete","focusable","aria-labelledby","data-selector","onClick","aria-label","title","Rating","rating","stars","Array","i","parseInt","role","j","map","star","index","Poster","posters","length","src","image","alt","openDetail","Movie","movie","data","node","setMovieId","setShowDetail","setTitle","Moment","releaseDate","format","images","Loader","circleCommonClasses","Message","message","GET_SEARCH_MOVIES","gql","Keyword","keywords","keyword","Info","isArray","GET_MOVIE","Detail","useQuery","variables","movieId","loading","error","showDetail","movies","time","h","m","formatTime","runtime","spokenLanguages","genres","overview","List","search","edges","sort","a","b","Date","App","ApolloProvider","tabIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7470566.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n    uri: 'https://tmdb.apps.quintero.io/',\n    cache: new InMemoryCache()\n})\n\nexport default client;","import { FaSearch } from 'react-icons/fa';\nimport {useState} from \"react\";\n\nfunction Search(props) {\n    const [term, setTerm] = useState('');\n\n    function handleKeyPress(event) {\n        if(event.key === 'Enter') {\n            sendTerm(event);\n        }\n    }\n\n    function sendTerm(event) {\n        props.setTerm(term);\n        event.preventDefault();\n    }\n\n    function handleTerm(event) {\n        setTerm(event.target.value);\n        event.preventDefault();\n    }\n\n    return (\n        <header className=\"fixed w-full top-0 bg-mv-main text-white py-7 shadow-lg\">\n            <div className=\"skip-to-main\">\n                <a href=\"#main-content\">Skip to main content</a>\n            </div>\n            <div className=\"container mx-auto font-md space-x-4 px-3\">\n                <div className=\"flex\">\n                    <div className=\"flex-1 text-3xl\">\n                        Movies\n                    </div>\n                    <div className=\"flex-2 flex items-center\">\n                        <div className=\"flex\">\n                            <input className=\"px-2 py-1 rounded-sm text-gray-800 text-sm w-48 sm:w-64 md:w-96\"\n                                   type=\"text\" id=\"edit-search\" name=\"search\" onChange={ handleTerm } onKeyPress={ handleKeyPress }\n                                   maxLength=\"50\" required=\"required\" aria-required=\"true\" autoComplete=\"off\"\n                                   focusable=\"true\" aria-labelledby=\"search-label search-label-sm\"\n                            />\n                        </div>\n                        <div className=\"flex pl-2\">\n                            <button data-selector=\"edit-submit\"\n                                    className=\"text-white text-xl\" type=\"submit\"\n                                    id=\"search-submit\" name=\"search-submit\" value=\"Search\"\n                                    onClick={ sendTerm }\n                                    aria-label=\"search button\"\n                            >\n                                <FaSearch focusable='false' title=\"search button\" />\n                            </button>\n                        </div>\n                        <div className=\"absolute bottom-3 text-sm pl-1\">\n                            <label id=\"search-label\" className=\"hidden sm:block\">What are you looking for? (ex: world, home)</label>\n                            <label id=\"search-label-sm\" className=\"block sm:hidden\">Keyword (ex: world, home)</label>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        </header>\n    )\n}\n\nexport default Search;","import { MdStar, MdStarBorder, MdStarHalf } from 'react-icons/md';\n\nconst Rating = (props) => {\n    const TOTAL_STAR = 5;\n    const rating = props.rating / 2;\n    let stars = new Array(TOTAL_STAR);\n    let i = 0;\n    while(i < parseInt(rating)) {\n        stars[i] = <MdStar className=\"mx-1 w-5 h-5 fill-current text-yellow-500\" role=\"img\" title=\"a star\" focusable='false' aria-labelledby={`rating_${props.id}`} />;\n        i++;\n    }\n\n    if(TOTAL_STAR > i) {\n        if((rating % 1 * 10) < 3) stars[i] = <MdStarBorder className=\"mx-1 w-5 h-5 fill-current text-yellow-500\" role=\"img\" title=\"empty star\" focusable='false' aria-labelledby={`rating_${props.id}`} />;\n        else stars[i] = <MdStarHalf className=\"mx-1 w-5 h-5 fill-current text-yellow-500\" role=\"img\" title=\"half star\" focusable='false' aria-labelledby={`rating_${props.id}`} />;\n        i++;\n    }\n\n    if(TOTAL_STAR > i) {\n        for (let j = i; j < TOTAL_STAR; j++) {\n            stars[j] = <MdStarBorder className=\"mx-1 w-5 h-5 fill-current text-yellow-500\" role=\"img\" title=\"empty star\" focusable='false' aria-labelledby={`rating_${props.id}`} />;\n        }\n    }\n\n    return (\n        <div className=\"flex justify-center items-center\">\n            <div className=\"flex items-center mb-1\" id={`rating_${props.id}`}>\n                {\n                    stars.map((star, index) => {\n                        return <span key={`${props.id}_${index}`}>{star}</span>;\n                    })\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Rating;","import { FaBan } from \"react-icons/fa\";\n\nconst Poster = (props) => {\n    return (\n        <>\n            {\n                (props.posters.length > 0)?\n                    (<img src={props.posters[0].image}\n                          alt={props.title}\n                          className=\"rounded-t-lg w-full h-52 sm:h-52 md:h-72 cursor-pointer\"\n                          onClick={ props.openDetail }\n                    />):\n                    (\n                        <div className=\"bg-gray-100 text-center pt-24 rounded-t-lg w-full h-52 sm:h-52 md:h-72 cursor-pointer text-gray-500\"\n                             id={`image_${props.id}`} onClick={ props.openDetail } >\n                            <FaBan role=\"img\"\n                                   focusable=\"false\"\n                                   aria-labelledby={`image_${props.id}`}\n                                   title=\"no image\"\n                                   className=\"mx-auto text-5xl text-gray-300 mb-3\"\n                            />\n                            No Image\n                        </div>\n                    )\n            }\n        </>\n    );\n};\n\nexport default Poster;","import Moment from 'moment';\nimport Rating from '../rating/Rating';\nimport Poster from \"../poster/Poster\";\n\nfunction Movie(props) {\n    const movie = props.data.node;\n\n    function openDetail(event) {\n        props.setMovieId(movie.id);\n        props.setShowDetail(true);\n        props.setTitle(`${movie.title} (${Moment(movie.releaseDate).format('YYYY')})`);\n        event.preventDefault();\n    }\n\n    return (\n        <div className=\"border border-gray-300 rounded-lg shadow-md\">\n            <Poster posters={movie.images.posters} title={movie.title} id={movie.id} openDetail={openDetail} />\n\n            <div className=\"px-2 pt-2 pb-4\">\n                <Rating rating={movie.rating} id={movie.id} />\n                <p className=\"font-bold text-base leading-5 mb-1 cursor-pointer hover:text-mv-main sm:text-lg sm:leading-6\" onClick={ openDetail }>{movie.title}</p>\n                <p className=\"text-gray-700 text-sm\">{Moment(movie.releaseDate).format('YYYY-MM-DD')}</p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Movie;","const Loader = () => {\n    let circleCommonClasses = 'h-4 w-4 m-2 bg-mv-main rounded-full';\n\n    return (\n        <div className='flex p-4'>\n            <div className={`${circleCommonClasses} mr-1 animate-bounce`}></div>\n            <div className={`${circleCommonClasses} mr-1 animate-bounce200`}></div>\n            <div className={`${circleCommonClasses} animate-bounce400`}></div>\n        </div>\n    );\n};\n\nexport default Loader;","import { MdError } from 'react-icons/md';\n\nconst Message = (props) => {\n    return (\n        <div className=\"py-4 border-0 rounded relative mx-2 sm:mx-0 my-7 border text-center text-mv-main\">\n          <span className=\"text-xl inline-block mr-5 align-middle\">\n            <MdError role=\"img\" focusable=\"false\" aria-labelledby=\"message\" title=\"warning\" />\n          </span>\n          <div className=\"inline-block align-middle mr-8\" id=\"message\">\n            {props.message}\n          </div>\n        </div>\n    );\n};\n\nexport default Message;","import {gql} from \"@apollo/client\";\n\nexport const GET_SEARCH_MOVIES = gql`\n    query ($term: String){\n      movies {\n        search(\n          first: 10\n          term: $term\n        ) {\n          edges {\n            node {\n              id\n              title\n              releaseDate\n              rating\n              images {\n                posters {\n                  width\n                  height\n                  image(size: W154)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n`;","const Keyword = (props) => {\n\n    return (\n        <div className=\"flex flex-wrap\">\n            {\n                props.keywords.map((keyword, index) => {\n                    return (\n                        <div className=\"border border-gray-300 rounded-lg text-center text-xs shadow-md p-1 mr-1 mb-2\"\n                             key={`${keyword.id}_${index}`}>{keyword.name}</div>\n                    )\n                })\n            }\n        </div>\n    );\n};\n\nexport default Keyword;","import Keyword from \"../keyword/Keyword\";\n\nconst Info = (props) => {\n    return (\n        <div>\n            {\n                (props.value.length) ?\n                (\n                <div className=\"mb-1 text-sm sm:text-base\">\n                    <span className=\"font-bold\">{props.title}: </span>\n                    <span className=\"text-gray-700\">\n                        {\n                            (Array.isArray(props.value))?\n                                <Keyword keywords={props.value} /> :\n                                props.value\n                        }\n                    </span>\n                </div>\n                ):\n                ''\n            }\n        </div>\n    )\n};\n\nexport default Info;","import {gql} from \"@apollo/client\";\n\nexport const GET_MOVIE = gql`\n    query ($id: String) {\n      movies {\n        movie(id: $id) {\n          id\n          title\n          releaseDate\n          rating\n          runtime\n          overview,\n          keywords{\n            id,\n            name\n          }\n          genres{\n            id,\n            name\n          }\n          images {\n            posters {\n              width\n              height\n              image(size: W154)\n            }\n          }\n          spokenLanguages {\n            iso639_1\n            name\n          }\n        }\n      }\n    }\n`;","import React from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport { MdClose } from 'react-icons/md';\nimport Info from '../info/Info';\nimport {GET_MOVIE} from \"../../graphql/movie.query\";\nimport Loader from \"../loader/Loader\";\nimport Message from \"../message/Message\";\nimport Poster from \"../poster/Poster\";\n\nexport default function Detail(props) {\n    const { loading, error, data } = useQuery(GET_MOVIE, {\n        variables: { id: props.movieId }\n    });\n\n    //if (loading) return  <Loader />\n    //if (error) return <Message message={error.message} />\n    function formatTime(time) {\n        if(time === 0) return time;\n        let h = parseInt(time / 60);\n        let m = time % 60;\n        return (h)?`${h}h ${m}m`:`${m}m`;\n    }\n\n    return (\n        <>\n            {props.showDetail ? (\n                <>\n                    <div className=\"justify-center items-top flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 mx-4 outline-none focus:outline-none sm:mx-8\">\n                        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                <div className=\"flex items-start justify-between py-4 px-6 border-b border-solid border-blueGray-200 rounded-t\">\n                                    <h2 className=\"text-3xl font-semibold mr-2\">\n                                        { props.title }\n                                    </h2>\n                                    <button className=\"p-1 ml-auto bg-transparent border-0 text-black float-right text-3xl text-gray-600 leading-none font-semibold outline-none focus:outline-none\"\n                                            id=\"close\" aria-label=\"close button\" role=\"button\"\n                                        onClick={() => props.setShowDetail(false)}>\n                                        <MdClose role=\"img\" title=\"close button\" focusable='false' aria-labelledby=\"close\" />\n                                    </button>\n                                </div>\n                                {\n                                    (loading) ? (\n                                        <Loader />\n                                    ):(\n                                        (error) ? (\n                                            <Message message={error.message} />\n                                        ):(\n                                            (props.movieId)?\n                                                (\n                                                    <div className=\"px-8 py-5\">\n                                                        <div className=\"sm:flex\">\n                                                            <div className=\"w-48 mx-auto mb-3 sm:w-2/6 sm:mb-0\">\n                                                                <Poster posters={data.movies.movie.images.posters}\n                                                                        title={data.movies.movie.title}\n                                                                        id={data.movies.movie.id}\n                                                                        openDetail={() => {}}\n                                                                />\n\n                                                            </div>\n                                                            <div className=\"sm:ml-6 sm:w-4/6 flex-auto\">\n                                                                <div className=\"py-1 text-blueGray-500 text-lg leading-relaxed\">\n                                                                    <Info title=\"Running Time\" value={formatTime(data.movies.movie.runtime)} />\n                                                                    <Info title=\"Languages\" value={data.movies.movie.spokenLanguages} />\n                                                                    <Info title=\"Genres\" value={data.movies.movie.genres} />\n                                                                    <Info title=\"Keywords\" value={data.movies.movie.keywords} />\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"block my-4\">\n                                                            <div className=\"text-lg font-bold\">Overview</div>\n                                                            <p className=\"text-sm text-gray-700\">\n                                                                {data.movies.movie.overview}\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                ):\n                                                ''\n                                        )\n                                    )\n                                }\n                                <div className=\"flex items-center justify-end p-2 border-t border-solid border-blueGray-200 rounded-b\">\n                                    <button\n                                        className=\"text-mv-main background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                                        type=\"button\"\n                                        onClick={() => props.setShowDetail(false)}>\n                                        Close\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </>\n            ) : null}\n        </>\n    );\n}","import { useQuery } from '@apollo/client';\nimport { useState } from \"react\";\nimport Movie from './Movie';\nimport Loader from \"../loader/Loader\";\nimport Message from '../message/Message';\nimport {GET_SEARCH_MOVIES} from \"../../graphql/movies.query\";\nimport Detail from './Detail';\n\nfunction List(props) {\n    const [showDetail, setShowDetail] = useState(false);\n    const [movieId, setMovieId] = useState('');\n    const [title, setTitle] = useState('');\n    const { loading, error, data } = useQuery(GET_SEARCH_MOVIES, {\n        variables: { term: props.term }\n    });\n\n    if (loading) return  <Loader />\n    if (error) return <Message message={error.message} />\n\n    if(data.movies.search.edges.length > 0) {\n        const movies = [...data.movies.search.edges].sort((a, b) => new Date(b.node.releaseDate) - new Date(a.node.releaseDate));\n        return (\n            <>\n                <div className=\"grid grid-cols-2 gap-x-6 gap-y-9 sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5\"\n                     >\n                    {\n                        movies.map((movie, id) => {\n                        return <Movie key={id}\n                                      data={movie}\n                                      setMovieId={setMovieId}\n                                      setShowDetail={setShowDetail}\n                                      setTitle={setTitle} />\n                        })\n                    }\n                </div>\n                {\n                    (movieId) ?\n                        (<Detail movieId={movieId}\n                                 setMovieId={setMovieId}\n                                 showDetail={showDetail}\n                                 setShowDetail={setShowDetail}\n                                 title={title} />):\n                        ''\n                }\n\n            </>\n        )\n    } else {\n        return <Message message=\"There is no result\" />\n    }\n\n}\n\nexport default List;","import React, { useState } from 'react';\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"./client\";\n\nimport Search from './components/search/Search';\nimport List from './components/movie/List';\nimport Message from './components/message/Message';\n\nfunction App() {\n    const [term, setTerm] = useState('');\n    return (\n        <ApolloProvider client={client}>\n            <div className=\"w-full\">\n                <Search setTerm={setTerm} />\n                <section className=\"mt-28 mb-20\" role='main' id=\"main-content\" tabIndex=\"-1\">\n                    <div className=\"container mx-auto px-3\">\n                    {\n                        (term === '')?\n                            <Message message=\"Please enter keyword that you are looking for.\" />:\n                            <>\n                                <h1 className=\"text-2xl mb-5\">Results of '{term}'</h1>\n                                <List term={term} />\n                            </>\n                    }\n                    </div>\n                </section>\n            </div>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}